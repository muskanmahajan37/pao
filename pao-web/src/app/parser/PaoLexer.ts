// Generated from Pao.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PaoLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly COLON = 2;
	public static readonly NAME = 3;
	public static readonly DOMAIN_EVENT = 4;
	public static readonly COMMAND = 5;
	public static readonly CARRIER = 6;
	public static readonly ENTER_RULE = 7;
	public static readonly INPUT_RULE = 8;
	public static readonly FIELD = 9;
	public static readonly COMMENT_TEXT = 10;
	public static readonly EXT_SYSTEM = 11;
	public static readonly SCHEDULER = 12;
	public static readonly ROLE = 13;
	public static readonly LBRACK = 14;
	public static readonly RBRACK = 15;
	public static readonly COMMA = 16;
	public static readonly WS = 17;
	public static readonly COMMENT = 18;
	public static readonly LINE_COMMENT = 19;
	public static readonly IDENTIFIER = 20;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "COLON", "NAME", "DOMAIN_EVENT", "COMMAND", "CARRIER", "ENTER_RULE", 
		"INPUT_RULE", "FIELD", "COMMENT_TEXT", "EXT_SYSTEM", "SCHEDULER", "ROLE", 
		"LBRACK", "RBRACK", "COMMA", "WS", "COMMENT", "LINE_COMMENT", "IDENTIFIER", 
		"LetterOrDigit", "Letter",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "','", undefined, "'\u540D\u79F0'", "'\u9886\u57DF\u4E8B\u4EF6'", 
		"'\u51B3\u7B56\u547D\u4EE4'", "'\u9886\u57DF\u540D\u8BCD'", "'\u51FA\u89C4\u5219'", 
		"'\u5165\u89C4\u5219'", "'\u5B57\u6BB5'", "'\u6CE8\u91CA'", "'\u5916\u90E8\u7CFB\u7EDF'", 
		"'\u5B9A\u65F6\u4EFB\u52A1'", "'\u89D2\u8272'", "'['", "']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, "COLON", "NAME", "DOMAIN_EVENT", "COMMAND", "CARRIER", 
		"ENTER_RULE", "INPUT_RULE", "FIELD", "COMMENT_TEXT", "EXT_SYSTEM", "SCHEDULER", 
		"ROLE", "LBRACK", "RBRACK", "COMMA", "WS", "COMMENT", "LINE_COMMENT", 
		"IDENTIFIER",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PaoLexer._LITERAL_NAMES, PaoLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PaoLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PaoLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Pao.g4"; }

	// @Override
	public get ruleNames(): string[] { return PaoLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PaoLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PaoLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PaoLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x16\x97\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x07\x03\x07\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F" +
		"\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x06\x12h\n\x12\r\x12" +
		"\x0E\x12i\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x07\x13r\n\x13" +
		"\f\x13\x0E\x13u\v\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x07\x14\x80\n\x14\f\x14\x0E\x14\x83\v\x14\x03" +
		"\x14\x03\x14\x03\x15\x03\x15\x07\x15\x89\n\x15\f\x15\x0E\x15\x8C\v\x15" +
		"\x03\x16\x03\x16\x05\x16\x90\n\x16\x03\x17\x03\x17\x03\x17\x03\x17\x05" +
		"\x17\x96\n\x17\x03s\x02\x02\x18\x03\x02\x03\x05\x02\x04\x07\x02\x05\t" +
		"\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17" +
		"\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13" +
		"%\x02\x14\'\x02\x15)\x02\x16+\x02\x02-\x02\x02\x03\x02\v\x04\x02<<\uFF1C" +
		"\uFF1C\x04\x02..\uFF0E\uFF0E\x05\x02\v\f\x0E\x0F\"\"\x04\x02\f\f\x0F\x0F" +
		"\x03\x022;\x07\x02\"\"&&C\\aac|\x04\x02\x02\x81\uD802\uDC01\x03\x02\uD802" +
		"\uDC01\x03\x02\uDC02\uE001\x02\x9B\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02" +
		"\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x03" +
		"/\x03\x02\x02\x02\x051\x03\x02\x02\x02\x073\x03\x02\x02\x02\t6\x03\x02" +
		"\x02\x02\v;\x03\x02\x02\x02\r@\x03\x02\x02\x02\x0FE\x03\x02\x02\x02\x11" +
		"I\x03\x02\x02\x02\x13M\x03\x02\x02\x02\x15P\x03\x02\x02\x02\x17S\x03\x02" +
		"\x02\x02\x19X\x03\x02\x02\x02\x1B]\x03\x02\x02\x02\x1D`\x03\x02\x02\x02" +
		"\x1Fb\x03\x02\x02\x02!d\x03\x02\x02\x02#g\x03\x02\x02\x02%m\x03\x02\x02" +
		"\x02\'{\x03\x02\x02\x02)\x86\x03\x02\x02\x02+\x8F\x03\x02\x02\x02-\x95" +
		"\x03\x02\x02\x02/0\x07.\x02\x020\x04\x03\x02\x02\x0212\t\x02\x02\x022" +
		"\x06\x03\x02\x02\x0234\x07\u540F\x02\x0245\x07\u79F2\x02\x025\b\x03\x02" +
		"\x02\x0267\x07\u9888\x02\x0278\x07\u57E1\x02\x0289\x07\u4E8D\x02\x029" +
		":\x07\u4EF8\x02\x02:\n\x03\x02\x02\x02;<\x07\u51B5\x02\x02<=\x07\u7B58" +
		"\x02\x02=>\x07\u547F\x02\x02>?\x07\u4EE6\x02\x02?\f\x03\x02\x02\x02@A" +
		"\x07\u9888\x02\x02AB\x07\u57E1\x02\x02BC\x07\u540F\x02\x02CD\x07\u8BCF" +
		"\x02\x02D\x0E\x03\x02\x02\x02EF\x07\u51FC\x02\x02FG\x07\u89C6\x02\x02" +
		"GH\x07\u521B\x02\x02H\x10\x03\x02\x02\x02IJ\x07\u5167\x02\x02JK\x07\u89C6" +
		"\x02\x02KL\x07\u521B\x02\x02L\x12\x03\x02\x02\x02MN\x07\u5B59\x02\x02" +
		"NO\x07\u6BB7\x02\x02O\x14\x03\x02\x02\x02PQ\x07\u6CEA\x02\x02QR\x07\u91CC" +
		"\x02\x02R\x16\x03\x02\x02\x02ST\x07\u5918\x02\x02TU\x07\u90EA\x02\x02" +
		"UV\x07\u7CFD\x02\x02VW\x07\u7EE1\x02\x02W\x18\x03\x02\x02\x02XY\x07\u5B9C" +
		"\x02\x02YZ\x07\u65F8\x02\x02Z[\x07\u4EFD\x02\x02[\\\x07\u52A3\x02\x02" +
		"\\\x1A\x03\x02\x02\x02]^\x07\u89D4\x02\x02^_\x07\u8274\x02\x02_\x1C\x03" +
		"\x02\x02\x02`a\x07]\x02\x02a\x1E\x03\x02\x02\x02bc\x07_\x02\x02c \x03" +
		"\x02\x02\x02de\t\x03\x02\x02e\"\x03\x02\x02\x02fh\t\x04\x02\x02gf\x03" +
		"\x02\x02\x02hi\x03\x02\x02\x02ig\x03\x02\x02\x02ij\x03\x02\x02\x02jk\x03" +
		"\x02\x02\x02kl\b\x12\x02\x02l$\x03\x02\x02\x02mn\x071\x02\x02no\x07,\x02" +
		"\x02os\x03\x02\x02\x02pr\v\x02\x02\x02qp\x03\x02\x02\x02ru\x03\x02\x02" +
		"\x02st\x03\x02\x02\x02sq\x03\x02\x02\x02tv\x03\x02\x02\x02us\x03\x02\x02" +
		"\x02vw\x07,\x02\x02wx\x071\x02\x02xy\x03\x02\x02\x02yz\b\x13\x02\x02z" +
		"&\x03\x02\x02\x02{|\x071\x02\x02|}\x071\x02\x02}\x81\x03\x02\x02\x02~" +
		"\x80\n\x05\x02\x02\x7F~\x03\x02\x02\x02\x80\x83\x03\x02\x02\x02\x81\x7F" +
		"\x03\x02\x02\x02\x81\x82\x03\x02\x02\x02\x82\x84\x03\x02\x02\x02\x83\x81" +
		"\x03\x02\x02\x02\x84\x85\b\x14\x02\x02\x85(\x03\x02\x02\x02\x86\x8A\x05" +
		"-\x17\x02\x87\x89\x05+\x16\x02\x88\x87\x03\x02\x02\x02\x89\x8C\x03\x02" +
		"\x02\x02\x8A\x88\x03\x02\x02\x02\x8A\x8B\x03\x02\x02\x02\x8B*\x03\x02" +
		"\x02\x02\x8C\x8A\x03\x02\x02\x02\x8D\x90\x05-\x17\x02\x8E\x90\t\x06\x02" +
		"\x02\x8F\x8D\x03\x02\x02\x02\x8F\x8E\x03\x02\x02\x02\x90,\x03\x02\x02" +
		"\x02\x91\x96\t\x07\x02\x02\x92\x96\n\b\x02\x02\x93\x94\t\t\x02\x02\x94" +
		"\x96\t\n\x02\x02\x95\x91\x03\x02\x02\x02\x95\x92\x03\x02\x02\x02\x95\x93" +
		"\x03\x02\x02\x02\x96.\x03\x02\x02\x02\t\x02is\x81\x8A\x8F\x95\x03\x02" +
		"\x03\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PaoLexer.__ATN) {
			PaoLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PaoLexer._serializedATN));
		}

		return PaoLexer.__ATN;
	}

}

